//** THIS FILE IS AUTOGENERATED, DO NOT MODIFY DIRECTLY.  **/
import cpp
import RuleMetadata
import codingstandards.cpp.exclusions.RuleMetadata

newtype FunctionTypesQuery =
  TFunctionAddressesShouldAddressOperatorQuery() or
  TDisallowedFunctionTypeQualifierQuery()

predicate isFunctionTypesQueryMetadata(Query query, string queryId, string ruleId, string category) {
  query =
    // `Query` instance for the `functionAddressesShouldAddressOperator` query
    FunctionTypesPackage::functionAddressesShouldAddressOperatorQuery() and
  queryId =
    // `@id` for the `functionAddressesShouldAddressOperator` query
    "c/misra/function-addresses-should-address-operator" and
  ruleId = "RULE-17-12" and
  category = "advisory"
  or
  query =
    // `Query` instance for the `disallowedFunctionTypeQualifier` query
    FunctionTypesPackage::disallowedFunctionTypeQualifierQuery() and
  queryId =
    // `@id` for the `disallowedFunctionTypeQualifier` query
    "c/misra/disallowed-function-type-qualifier" and
  ruleId = "RULE-17-13" and
  category = "required"
}

module FunctionTypesPackage {
  Query functionAddressesShouldAddressOperatorQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `functionAddressesShouldAddressOperator` query
      TQueryC(TFunctionTypesPackageQuery(TFunctionAddressesShouldAddressOperatorQuery()))
  }

  Query disallowedFunctionTypeQualifierQuery() {
    //autogenerate `Query` type
    result =
      // `Query` type for `disallowedFunctionTypeQualifier` query
      TQueryC(TFunctionTypesPackageQuery(TDisallowedFunctionTypeQualifierQuery()))
  }
}
